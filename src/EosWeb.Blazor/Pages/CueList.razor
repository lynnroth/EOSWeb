@using EosWeb.Core.Models.Eos

@inject IOscClient OscClient
@inject EosService EosService

    <div hidden="@hidden">
        <BSTable IsStriped="true" IsDark="true" Class="col-sm-1">
            <thead>
                <tr>
                    <th scope="col">List Index</th>
                    <th scope="col">List Number</th>
                    <th scope="col">List Label</th>
                    <th scope="col">Cue Index</th>
                    <th scope="col">Cue Number</th>
                    <th scope="col">Cue Part Number</th>
                    <th scope="col">Cue Label</th>
                    <th scope="col">Cue Intens Down</th>
                    <th scope="col">Cue Intens Up</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cuelist in EosService.CueLists)
                {
                    @foreach (var cue in cuelist.Value.Cues.OrderBy((x)=> x.Key))
                    {
                        <tr>
                            <th scope="row">@cuelist.Value.Index</th>
                            <td>@cuelist.Value.Number</td>
                            <td>@cuelist.Value.Label</td>
                            <td>@cue.Value.Index</td>
                            <td>@cue.Value.Number</td>
                            <td>@cue.Value.PartNumber</td>
                            <td>@cue.Value.Label</td>
                            <td>@cue.Value.DownIntensityDuration</td>
                            <td>@cue.Value.UpIntensityDuration</td>
                            <td><div class="playButton" @onclick=@(() => GoToCue(cuelist.Value.Number, cue.Value.Number, cue.Value.PartNumber))><MatIcon Icon="play_arrow"></MatIcon></div></td>
                        </tr>
                    }
                }
            </tbody>
        </BSTable>
        
        <button @onclick=@(() => Load())>Load</button>
        <button @onclick=@(() => Clear())>Clear</button>
        <br />

    </div>

@code {

    Hub Hub = Hub.Default;
    private bool hidden = false;
    List<EosWeb.Core.Models.Eos.CueList> CueLists = new List<Core.Models.Eos.CueList>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Hub.Subscribe<UIToggle>((u) =>
        {
            InvokeAsync(() =>
            {
                if (u.Key == "Cuelist")
                {
                    hidden = u.Hidden;
                    StateHasChanged();
                }
            });
        });


        Hub.Subscribe<EosUpdate>((u) =>
        {
            InvokeAsync(() =>
            {
                if (u.Item == EosUpdateItem.CueList)
                {
                    CueLists = EosService.CueLists.Values.ToList();
                    StateHasChanged();
                }
            });
        });
        Load();
        StateHasChanged();
    }

    private void GoToCue(int listNumber, int cueNumber, int partNumber)
    {
        EosService.FireCue(listNumber, cueNumber, partNumber);
    }

    private void Load()
    {
        EosService.Load();
        StateHasChanged();
    }

    private void Clear()
    {
        StateHasChanged();
    }
}
