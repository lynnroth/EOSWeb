@using Radzen.Blazor
@using EosWeb.Core.Models.Eos

@inject IOscClient OscClient
@inject EosService EosService

    <div hidden="@hidden">
        <textarea class="logText">
            @EosService.CueLists.ToString()
        </textarea>
        <br />
        <button @onclick=@(() => Load())>Load</button>
        <button @onclick=@(() => ClearLog())>Clear</button>
    </div>

@code {

    Hub Hub = Hub.Default;
    private bool hidden = false;
    List<EosWeb.Core.Models.Eos.CueList> CueLists = new List<Core.Models.Eos.CueList>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Hub.Subscribe<UIToggle>((u) =>
        {
            InvokeAsync(() =>
            {
                if (u.Key == "Cuelist")
                {
                    hidden = u.Hidden;
                    StateHasChanged();
                }
            });
        });


        Hub.Subscribe<EosUpdate>((u) =>
        {
            InvokeAsync(() =>
            {
                if (u.Item == EosUpdateItem.CueList)
                {
                    CueLists = EosService.CueLists.Values.ToList();
                    StateHasChanged();
                }
            });
        });

    }

    
    private void Load()
    {
        EosService.Load();
        StateHasChanged();
    }

    private void ClearLog()
    {
        
        StateHasChanged();
    }
}
