@inject IOscClient OscClient

    <div style="color: white;">
        <h3>Info</h3>
        <table>
            <tr>
                <td>Version: </td>
                <td>@Version</td>
            </tr>
        </table>
    </div>

@code {
    private StringBuilder Log = new StringBuilder();
    Hub Hub = Hub.Default;
    private bool hidden = true;

    public string Version { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Hub.Subscribe<OscMessage>((message) =>
        {
            InvokeAsync(() =>
            {
                ProcessPacket(message);
                StateHasChanged();
            });
        });

        Hub.Subscribe<UIToggle>((u) =>
        {
            InvokeAsync(() =>
            {
                if (u.Key == "Info")
                {
                    hidden = u.Hidden;
                }
                StateHasChanged();
            });
        });

        GetInfo();
    }

    private void GetInfo()
    {
        OscClient.SendAsync("/eos/get/version");
    }

    private void ProcessPacket(OscMessage packet)
    {
        if (packet.Address == "/eos/out/get/version")
        {
            foreach (var item in packet.Data)
            {
                Version = item.ToString();
            }

        }
    }
}
